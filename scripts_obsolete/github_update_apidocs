#!/bin/bash

# Updates APIDOCs generated by lein & Codox on the basis of GitHub url.
# Usage:
#
# github_update_apidocs https://github.com/lopusz/langlab
#
# Works the following way
# * checkouts the project from github to a tmp_directory
# * replaces gh-pages branch of the tmp_directory with generated doc
# * the `git push github gh-pages` is left to the user

if [[ ! ($# = 1 || $# = 2)  ]]; then
    SCRIPT=`basename $0`
    echo "Usage: $SCRIPT GITHUB_URL [TAG]"
    exit 1
fi

GIT_REPO_URL=$1

if [[ $# = 2 ]]; then
    GIT_TAG=$2
else
    GIT_TAG="master"
fi

C_PROJECT=`basename ${GIT_REPO_URL}`
C_TMP_CODE_DIR=tmp_code_${C_PROJECT}_$$
C_TMP_DOCS_DIR=tmp_docs_${C_PROJECT}_$$

C_GIT_REMOTE="github"
C_GIT_CODE_BRANCH="master"
C_GIT_DOCS_BRANCH="gh-pages"

C_DOCS_PATH="target/apidoc"

function change_to_git_dir {
    while [ ! -d .git ]; do
        if [ $(pwd)  == "/" ]; then
            echo "FATAL: .git not found. Exiting..."
            exit 1
        fi
        cd ..
    done
    local DIR=`pwd`
    basename ${DIR}
}

function get_git_repo_url {
    git remote -v | head -n1  | grep -o -e "https.*\.git"
}

function get_git_repo_url {
    git remote -v \
     | grep -e "${C_GIT_REMOTE}" \
     | head -n1  \
     | grep -e "github" \
     | grep -o -e "https.*\.git"
}

function clone_repo_to_tmp_dir {
    git clone -o ${C_GIT_REMOTE} $1 ${C_TMP_CODE_DIR}
    cd ${C_TMP_CODE_DIR}
    git checkout $2 
}

function update_docs_and_get_git_info {
    G_GIT_NUM=`git log --pretty=oneline | wc -l`
    G_GIT_SHA=`git log -n1 --format="%h"`
    sed -i "s/:aot :all/:aot nil/" project.clj
    lein do clean, doc
    mv ${C_DOCS_PATH} ../${C_TMP_DOCS_DIR}
    echo git checkout ${C_GIT_DOCS_BRANCH}
    git checkout project.clj
    git checkout ${C_GIT_DOCS_BRANCH}
    cd ..
    rm -rf ${C_TMP_CODE_DIR}/*
    cd ${C_TMP_CODE_DIR}
    cp -rp ../${C_TMP_DOCS_DIR}/* .
}

function commit_docs {
    git add -A .
    git commit -e -m \
    "Autocommit of API docs for ${C_GIT_CODE_BRANCH} commit ${G_GIT_NUM} (${G_GIT_SHA})."
}

function clean_tmp {
    cd ..
    rm -rf ${C_TMP_DOCS_DIR}
}

#GIT_REPO_URL=$(get_git_repo_url)

clone_repo_to_tmp_dir ${GIT_REPO_URL} ${GIT_TAG}
update_docs_and_get_git_info
commit_docs
clean_tmp

echo "Checkout written to ${C_TMP_CODE_DIR}. Review it manually & push to github:"
echo ""
echo "cd ${C_TMP_CODE_DIR} && git push -u github gh-pages"
